[{"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/App.js":"1","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SignUpComponent.js":"2","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/MainContainer.js":"3","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/JournalComponent.js":"4","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/DreamContainer.js":"5","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CreateDreamModal.js":"6","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/MediaCard.js":"7","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/EditDreamModal.js":"8","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/JournalContainer.js":"9","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CardDetailModal.js":"10","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/NavComponent.js":"11","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SearchComponent.js":"12","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/actionTypes.js":"13","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/actions.js":"14","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/rootReducer.js":"15","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DeleteDreamComponent.js":"16","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/AnalysisComponent.js":"17","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/index.js":"18","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DeleteJournalComponent.js":"19","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/HomeComponent.js":"20","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SideBar.js":"21","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DreamComponent.js":"22","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/LogInComponent.js":"23","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/reportWebVitals.js":"24","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/EditJournalModal.js":"25","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CreateJournalModal.js":"26","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DreamImage.js":"27","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SortComponent.js":"28"},{"size":2461,"mtime":1612034321275,"results":"29","hashOfConfig":"30"},{"size":3599,"mtime":1612383293555,"results":"31","hashOfConfig":"30"},{"size":437,"mtime":1612037475059,"results":"32","hashOfConfig":"30"},{"size":1129,"mtime":1612129763832,"results":"33","hashOfConfig":"30"},{"size":1409,"mtime":1612473247844,"results":"34","hashOfConfig":"30"},{"size":9662,"mtime":1612377177221,"results":"35","hashOfConfig":"30"},{"size":2019,"mtime":1611956848589,"results":"36","hashOfConfig":"30"},{"size":6060,"mtime":1612377261760,"results":"37","hashOfConfig":"30"},{"size":1192,"mtime":1612469617409,"results":"38","hashOfConfig":"30"},{"size":1781,"mtime":1611956848577,"results":"39","hashOfConfig":"30"},{"size":1828,"mtime":1612037480915,"results":"40","hashOfConfig":"30"},{"size":688,"mtime":1611423842479,"results":"41","hashOfConfig":"30"},{"size":527,"mtime":1611958898697,"results":"42","hashOfConfig":"30"},{"size":6142,"mtime":1611958422929,"results":"43","hashOfConfig":"30"},{"size":2400,"mtime":1611959176401,"results":"44","hashOfConfig":"30"},{"size":643,"mtime":1612127638129,"results":"45","hashOfConfig":"30"},{"size":3709,"mtime":1611956848576,"results":"46","hashOfConfig":"30"},{"size":1432,"mtime":1612033733320,"results":"47","hashOfConfig":"30"},{"size":792,"mtime":1612128364294,"results":"48","hashOfConfig":"30"},{"size":1219,"mtime":1612035528542,"results":"49","hashOfConfig":"30"},{"size":2731,"mtime":1612467583526,"results":"50","hashOfConfig":"30"},{"size":317,"mtime":1611423842475,"results":"51","hashOfConfig":"30"},{"size":2176,"mtime":1612384807253,"results":"52","hashOfConfig":"30"},{"size":362,"mtime":1611170228003,"results":"53","hashOfConfig":"30"},{"size":3477,"mtime":1612129212831,"results":"54","hashOfConfig":"30"},{"size":3653,"mtime":1612127441361,"results":"55","hashOfConfig":"30"},{"size":1397,"mtime":1611956848584,"results":"56","hashOfConfig":"30"},{"size":991,"mtime":1612472070387,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"n0kfz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/App.js",[],["121","122"],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SignUpComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/MainContainer.js",[],["123","124"],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/JournalComponent.js",[],["125","126"],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/DreamContainer.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CreateDreamModal.js",["127"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button'\nimport { connect } from 'react-redux'\nimport { postDream } from '../Redux/actions'\nimport { withRouter } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DreamImage from './DreamImage'\n// import { DirectUpload } from 'activestorage';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root: {\n        width: '25ch'\n    },\n}));\n\nfunction useInput(initialValue) {\n    const [value, setValue] = useState(initialValue);\n\n    function handleChange(event) {\n        setValue(event.target.value);\n    }\n\n    return [value, handleChange];\n}\n\n// function onImageChange(initialValue) {\n//     const [value, setValue] = useState(initialValue);\n\n//     function handleChange(event) {\n//         setValue({image: event.target.files[0]})\n//     }\n\n//     return [value, handleChange];\n// }\n\nfunction CreateDreamModal(props) {\n    const currentDate = new Date()\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [title, setTitle] = useInput(\"\")\n    const [rating, setRating] = useInput(\"\")\n    const [selectedDate, setSelectedDate] = React.useState(new Date(`${currentDate.getFullYear()} - ${currentDate.getMonth() + 1} - ${currentDate.getDay()}`))\n    const [story, setStory] = useInput(\"\")\n    const [character, setCharacter] = useInput(\"\")\n    const [place, setPlace] = useInput(\"\")\n    const [image, setImage] = useInput(\"\")\n    // const [image, setImage] = useState(\"\")\n\n    const handleDateChange = (date) => {\n        const dateString = date.toString()\n        const newDate = dateString.split(\"-\")\n        const finalDate = newDate[0].split(\" \")\n        const dateFormat = `${finalDate[1]} ${finalDate[2]} ${finalDate[3]}`\n        setSelectedDate(dateFormat);\n    };\n\n    const formSubmitHandler = (event) => {\n        const token = localStorage.getItem(\"token\")\n        event.preventDefault()\n        const newDream = {\n            title: title,\n            rating: rating,\n            date: selectedDate,\n            story: story,\n            character: character,\n            place: place,\n            image: image,\n            journal_id: props.journalId\n\n        }\n\n        // fetch('http://localhost:4000/api/v1/dreams', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json', \n        //         'Accept': 'application/json',\n        //         Authorization: `Bearer ${token}`\n        //     }, \n        //     body: JSON.stringify(newDream)\n        // })\n        // .then(response => response.json())\n        // .then(data => uploadFile(image, data))\n\n\n        console.log(newDream)\n        props.postDream(newDream)\n        // let formData = new FormData();\n        // formData.append('image', newDream.image);\n        // console.log(formData)\n        // props.postDream(newDream)\n        // fetch('http://localhost:4000/api/v1/dreams', {\n        //     method: 'POST',\n        //     body: formData\n        // })\n        //     .catch(error => console.log(error));\n        // this.setState({ title: \"\", rating: \"\", date: \"\", story: \"\", character: \"\", place: \"\", action: \"\", image: \"\" })\n        // props.history.push('/journals')\n\n\n\n        /********************* Attempt to reset Form (FAILED) *************************/\n        // document.getElementById(\"createForm\").reset()\n        // event.target.reset()\n\n        /********************* Attempt to reset Form (FAILED) *************************/\n        let btnClear = document.querySelector('.addDreamBtn')\n        let inputs = document.querySelectorAll('.inputOverride')\n        console.log(\"in Create Dream\", btnClear)\n        console.log(\"in Create Dream\", inputs)\n\n        btnClear.addEventListener('click', () => {\n            inputs.forEach(input => input.value = \"\")\n        })\n\n    }\n\n    // const uploadFile = (file, dream) => {\n    //     const upload = new DirectUpload(file, 'http://localhost:4000/api/v1/rails/active_storage/direct_uploads')\n    //     console.log(upload, file)\n    //     upload.create((error, blob) => {\n    //         console.log(blob)\n    //         if (error) {\n    //             console.log(error)\n    //         } else {\n    //             fetch(`http://localhost:4000/api/v1/dreams/${dream.id}`, {\n    //                 method: 'PUT', \n    //                 headers: {\n    //                     'Content-Type': 'application/json', \n    //                     'Accept': 'application/json'\n    //                 }, \n    //                 body: JSON.stringify({image: blob.signed_id})\n    //             })\n    //             .then(response => response.json())\n    //             .then(result => console.log(result))\n    //         }\n    //     })\n    // }\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Fab className=\"addDream\" color=\"secondary\" aria-label=\"add\" type=\"button\" onClick={handleOpen}>\n                <AddIcon />\n            </Fab>\n            {/* <Button variant=\"contained\" color=\"secondary\" type=\"button\" onClick={handleOpen}>\n                Add Dream\n      </Button> */}\n            <Modal\n                aria-labelledby=\"modal-dream-title\"\n                aria-describedby=\"modal-dream-story\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <form id=\"createForm\" style={{ 'marginBottom': '15px' }} onSubmit={formSubmitHandler.bind()} className={classes.paper}>\n                        <TextField label=\"Title\" className='inputOverride' style={{ 'marginRight': '15px' }} type=\"text\" placeholder=\"Title\" name=\"title\" value={title} onChange={setTitle} />\n                        <Box className=\"ratingForm\" component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                            <Typography component=\"legend\">Rating</Typography>\n                            <Rating\n                                name=\"simple-controlled\"\n                                value={rating}\n                                onChange={setRating}\n                            />\n                        </Box>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                margin=\"normal\"\n                                value={selectedDate}\n                                onChange={handleDateChange}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                        <br></br>\n                        <TextField label=\"Story\" className='inputOverride' style={{ 'marginRight': '15px' }} type=\"text\" placeholder=\"Story\" name=\"story\" value={story} onChange={setStory} />\n                        <br></br>\n                        <TextField label=\"Character\" className='inputOverride' style={{ 'marginRight': '15px' }} type=\"text\" placeholder=\"Character\" name=\"character\" value={character} onChange={setCharacter} />\n                        <br></br>\n                        <TextField label=\"Place\" className='inputOverride' style={{ 'marginRight': '15px' }} type=\"text\" placeholder=\"Place\" name=\"place\" value={place} onChange={setPlace} />\n                        <br></br>\n                        <TextField id=\"outlined-basic\" label=\"Image\" className='inputOverride' style={{ 'marginRight': '15px' }} type=\"text\" placeholder=\"Image - paste URL\" name=\"image\" value={image} onChange={setImage} />\n                        {/* <input type=\"file\" accept=\"image/*\" multiple={false} value={image} onChange={setImage} /> */}\n                        <DreamImage setImage={setImage} />\n                        <Button className='addDreamBtn' variant=\"contained\" color=\"secondary\" type=\"submit\">\n                            Add Dream\n\t\t\t\t\t</Button>\n                    </form>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\nfunction msp(state) {\n    return {\n        user: state.user,\n        journals: state.journals\n    }\n}\n\nfunction mdp(dispatch) {\n    return {\n        postDream: newDreamObj => dispatch(postDream(newDreamObj))\n    }\n}\n\nexport default connect(msp, mdp)(withRouter(CreateDreamModal))","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/MediaCard.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/EditDreamModal.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Containers/JournalContainer.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CardDetailModal.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/NavComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SearchComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/actionTypes.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/actions.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Redux/rootReducer.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DeleteDreamComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/AnalysisComponent.js",["128"],"import React from 'react'\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography';\n\nfunction AnalysisComponent(props) {\n\n    const checkRating = (value) => {\n        const array = []\n        props.journals.map(journalEl => {\n            if (journalEl.user_id === props.user.id) {\n                journalEl.dreams.forEach(dreamEl => {\n                    if (dreamEl.rating === value) {\n                        array.push(dreamEl)\n                    }\n                })\n            }\n        })\n        return array.length\n    }\n\n    const checkMonth = (value) => {\n        const array = []\n        props.journals.forEach(journalEl => {\n            if (journalEl.user_id === props.user.id) {\n                if (journalEl.month === value) {\n                    array.push(journalEl.dreams.length)\n                }\n            }\n        })\n        if (array.length > 0) {\n            const sum = array.reduce((result, number) => result + number)\n            return sum\n        }\n        else\n            return null\n    }\n\n    const data01 = [\n        { name: 'One Star', value: checkRating(1) }, { name: 'Two Stars', value: checkRating(2) },\n        { name: 'Three Stars', value: checkRating(3) }, { name: 'Four Stars', value: checkRating(4) },\n        { name: 'Five Stars', value: checkRating(5) },\n    ];\n\n    const data02 = [\n        { name: 'January', value: checkMonth(\"January\") }, { name: 'February', value: checkMonth(\"February\") },\n        { name: 'March', value: checkMonth(\"March\") }, { name: 'April', value: checkMonth(\"April\") },\n        { name: 'May', value: checkMonth(\"May\") }, { name: 'June', value: checkMonth(\"June\") },\n        { name: 'July', value: checkMonth(\"July\") }, { name: 'August', value: checkMonth(\"August\") },\n        { name: 'September', value: checkMonth(\"September\") }, { name: 'October', value: checkMonth(\"October\") },\n        { name: 'November', value: checkMonth(\"November\") }, { name: 'December', value: checkMonth(\"December\") }\n    ];\n\n\n    const colors = ['red', 'purple', 'black', 'blue', 'green', '#c237c6', '#7f6a8c', 'brown', 'turquoise', '#9b861a', 'lime', 'teal']\n    return (\n        <div className=\"pieChart\">\n            <Typography variant=\"h6\">Dreams by Rating:</Typography>\n            <PieChart width={400} height={400}>\n                <Pie dataKey=\"value\" isAnimationActive={false} data={data01} cx={200} cy={200} outerRadius={80}>\n                    {\n                        data01.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={colors[index]} />\n                        ))\n                    }\n                </Pie>\n                <Legend layout=\"horizontal\" align=\"center\" width={400} />\n                <Tooltip /> \n            </PieChart>\n            \n                <Typography variant=\"h6\">Dreams by Month:</Typography>\n                <PieChart width={400} height={400}>\n                    <Pie dataKey=\"value\" isAnimationActive={false} data={data02} cx={200} cy={200} outerRadius={80}>\n                        {\n                            data02.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={colors[index]} />\n                            ))\n                        }\n                    </Pie>\n                    <Legend layout=\"horizontal\" align=\"center\" width={400} />\n                    <Tooltip />\n                </PieChart>\n            \n        </div>\n    )\n}\n\n\n\nfunction msp(state) {\n    return {\n        user: state.user,\n        dreams: state.dreams,\n        journals: state.journals\n    }\n}\n\nexport default connect(msp)(AnalysisComponent)","/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/index.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DeleteJournalComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/HomeComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SideBar.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DreamComponent.js",[],["129","130"],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/LogInComponent.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/reportWebVitals.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/EditJournalModal.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/CreateJournalModal.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/DreamImage.js",[],"/Users/warrenniu/Development/code/Mod5/lucidity-frontend-app/lucidity-frontend/src/Components/SortComponent.js",["131","132"],"import React, {useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nfunction SortComponent(props) {\n    const [data, setData] = useState([]);\n    const [sortType, setSortType] = useState('date')\n\n    useEffect(() => {\n    const sortArray = type => {\n        const types = {\n            date: 'date',\n            rating: 'rating',\n        };\n        const sortProperty = types[type];\n        const sorted = [...props.dreams].sort((a, b) => b[sortProperty] - a[sortProperty]);\n        console.log(sorted);\n        setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]); \n\n\n\n    return (\n        <div>\n            <select onChange={(event) => setSortType(event.target.value)}>\n                <option value=\"date\">Sort by Date</option>\n                <option value=\"rating\">Sort by Rating</option>\n            </select>\n\n        </div>\n    )\n}\n\nfunction msp(state) {\n    return {\n        dreams: state.dreams,\n    }\n}\n\nexport default connect(msp)(SortComponent)",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":84,"column":15,"nodeType":"143","messageId":"144","endLine":84,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":10,"column":38,"nodeType":"147","messageId":"148","endLine":10,"endColumn":40},{"ruleId":"133","replacedBy":"149"},{"ruleId":"135","replacedBy":"150"},{"ruleId":"141","severity":1,"message":"151","line":5,"column":12,"nodeType":"143","messageId":"144","endLine":5,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":21,"column":6,"nodeType":"154","endLine":21,"endColumn":16,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],["156"],["157"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["156"],["157"],"'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.dreams'. Either include it or remove the dependency array.","ArrayExpression",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [props.dreams, sortType]",{"range":"161","text":"162"},[587,597],"[props.dreams, sortType]"]